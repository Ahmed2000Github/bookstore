



<style>
    .mud-paper {
        background-color: @CurrentThemeProvider.Instance.Palette.DarkLighten;
    }

    .mud-input-label {
        background-color: @CurrentThemeProvider.Instance.Palette.DarkLighten;
        color: @CurrentThemeProvider.Instance.Palette.TextPrimary.SetAlpha(150) !important;
    }

    .mud-input-helper-text {
        color: @CurrentThemeProvider.Instance.Palette.TextPrimary.SetAlpha(100) !important;
    }

</style>

<EditForm Model="@Model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudCard Class="card-background">
        <MudCardHeader>
            <MudText Typo="Typo.h5">Update author</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudTextField Label="Author name" Variant="Variant.Outlined" HelperText="Max 20 characters"
                          @bind-Value="Model.Name" For="@(() => Model.Name)" />
            <MudTextField Label="Author Description" Variant="Variant.Outlined" HelperText="Max 300 characters"
                          @bind-Value="Model.Description" For="@(() => Model.Description)" Lines="3" />

        </MudCardContent>
        <MudCardActions>
            <MudSpacer />
            <MudButton OnClick="OnCancelClick" Variant="Variant.Filled" Color="Color.Error" Class="ml-auto mr-4">Cancel</MudButton>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Upadte</MudButton>
        </MudCardActions>
    </MudCard>
</EditForm>

@code {
    [Parameter]
    public EventCallback OnCancelClick { get; set; }
    [Parameter]
    public Action<AdminUpdateAuthorFormViewModel> OnValidFormSubmit { get; set; }
    [Parameter]
    public AdminUpdateAuthorFormViewModel Model { get; set; }

    private void OnValidSubmit(EditContext context)
    {
        OnValidFormSubmit(Model);
        StateHasChanged();
    }


}
